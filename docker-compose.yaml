# secrets file needed to run the containers; use 'docker compose --env-file <path-to-secret-env-file> up -d' to run

services:
  
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    environment:
      TZ: $TIMEZONE
    network_mode: host
    volumes:
      - $BASE_FOLDER/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
  # https://www.home-assistant.io/installation/alternative#docker-compose

  deconz:
    container_name: deconz
    image: deconzcommunity/deconz
    volumes:
      - $BASE_FOLDER/deconz:/opt/deCONZ
    devices:
      - /dev/ttyACM0
    environment:
      TZ: $TIMEZONE
      DECONZ_WEB_PORT: $DECONZ_WEB_PORT
      DECONZ_VNC_MODE: "1"
      DECONZ_VNC_PORT: $DECONZ_VNC_PORT
      DECONZ_VNC_PASSWORD: $DECONZ_VNC_PWD
    network_mode: host
    restart: unless-stopped
    privileged: true
  # https://github.com/deconz-community/deconz-docker

  caddy:
    container_name: caddy
    # image: caddy:latest
    build:
      context: .
      dockerfile_inline: |
        FROM caddy:builder AS builder

        RUN xcaddy build \
          --with github.com/caddy-dns/duckdns

        FROM caddy:latest

        COPY --from=builder /usr/bin/caddy /usr/bin/caddy
    environment:
      TZ: $TIMEZONE
      HOST_ADDRESS: $HOST_ADDRESS
      DUCK_DNS_TOKEN: $DUCK_DNS_TOKEN
      LOG_FILE: "/log/caddy.log"
      HASSIO_EXT_URL: $HASSIO_EXT_URL
      HASSIO_EXT_PORT: $HASSIO_EXT_PORT
      HASSIO_INT_PORT: $HASSIO_INT_PORT
      VAULT_EXT_URL: $VAULT_EXT_URL
      VAULT_EXT_PORT: $VAULT_EXT_PORT
      VAULT_INT_PORT: $VAULT_INT_PORT
    ports:
      - "$HASSIO_EXT_PORT:$HASSIO_EXT_PORT"
      - "$VAULT_EXT_PORT:$VAULT_EXT_PORT"
      - "80:80"
    volumes:
      - "$BASE_FOLDER/caddy/Caddyfile:/etc/caddy/Caddyfile"
      - "$BASE_FOLDER/caddy/data:/data"
      - "$BASE_FOLDER/caddy/config:/config"
      - "$LOG_FOLDER/caddy.log:/log/caddy.log"
    restart: unless-stopped
  # https://hub.docker.com/_/caddy
    

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    environment:
      TZ: $TIMEZONE
      WEBPASSWORD: $PIHOLE_PWD #'set a secure password here or it will be random'
      WEB_PORT: $PIHOLE_WEB_PORT
      FTLCONF_REPLY_ADDR4: $HOST_ADDRESS
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "$PIHOLE_WEB_PORT:$PIHOLE_WEB_PORT/tcp"
    volumes:
      - "$BASE_FOLDER/pihole/etc-pihole:/etc/pihole"
      - "$BASE_FOLDER/pihole/etc-dnsmasq.d:/etc/dnsmasq.d"
      - type: bind
        source: $BASE_FOLDER/pihole/lighttpd/external.conf
        target: /etc/lighttpd/external.conf
      - "$BASE_FOLDER/pihole/backups:/backups"
    # cap_add:
    # - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  # https://github.com/pi-hole/docker-pi-hole

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    ports:
      - "$VAULT_INT_PORT:80"
    environment:
      DOMAIN: "https://$VAULT_EXT_URL:$VAULT_EXT_PORT/"  # Your domain; vaultwarden needs to know it's https to work properly with attachments
      SIGNUPS_ALLOWED: false
      ADMIN_TOKEN: $VAULT_ADMIN_TOKEN
      PUSH_ENABLED: true
      PUSH_INSTALLATION_ID: $VAULT_HOST_INSTALLATION_ID
      PUSH_INSTALLATION_KEY: $VAULT_HOST_INSTALLATION_KEY
      PUSH_RELAY_URI: "https://push.bitwarden.eu"
      PUSH_IDENTITY_URI: "https://identity.bitwarden.eu"
      ROCKET_LIMITS: "{json=10485760}"
      ROCKET_WORKERS: 10
      SHOW_PASSWORD_HINT: true
      LOG_FILE: "/log/vaultwarden.log"
      LOG_LEVEL: "info"
      EXTENDED_LOGGING: true
      SMTP_HOST: "smtp.gmail.com"
      SMTP_FROM: "vaultwarden@gmail.com"
      SMTP_PORT: "465"
      SMTP_SECURITY: "force_tls"
      SMTP_USERNAME: $VAULT_SMTP_EMAIL
      SMTP_PASSWORD: $VAULT_SMTP_PSW
    volumes:
      - "$BASE_FOLDER/vaultwarden/data:/data"
      - "$LOG_FOLDER/vaultwarden.log:/log/vaultwarden.log"
  # https://github.com/dani-garcia/vaultwarden/wiki/Using-Docker-Compose